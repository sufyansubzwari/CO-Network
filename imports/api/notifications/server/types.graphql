# types for Notifications namespace

type Notifications {
    _id: ID
    title: String!
    message: String
    owner: User!
    action: String
    entity: String
    entityId: String
    createdAt: Date
    viewed: Boolean
}

type Query {
    notifications(limit: Int, notifications: NotificationsInput): [Notifications]
    notification(_id: String): Notifications
}

type Subscription {
    subNotifications(limit: Int, notifications: NotificationsInput): [Notifications]
    subNewNotAndMsg: NotAndMsg
}

type NotAndMsg{
    messages: Int
    notifications: Int
}

input NotificationsInput {
    _id: ID
    title: String
    message: String
    owner: String
    action: String
    entity: String
    entityId: String
    viewed: Boolean
    createdAt: Date
}

type Mutation {
    notification(notification: NotificationsInput): Notifications
    deleteNotification(_id: String, all: Boolean): Notifications
}
