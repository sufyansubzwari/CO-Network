# types for Places namespace

type Places {
    _id: ID
    owner: String!
    location: Location!
    entity: String!
}

type Location{
    address: String!
    location: Coordinates!
    cityCountry: CityCountry
    fullLocation: Json
}

type Coordinates{
    lat: String
    lng: String
}

type CityCountry{
    city: String
    locality: String
    administrative_area_level_1: String
    country: String
}

type Query {
    places(places: PlacesInput): [Places]
    place(_id: String): Places
}

input PlacesInput {
    _id: ID
    owner: String
    location: LocationInput!
    entity: String
}

input LocationInput{
    address: String!
    location: CoordinatesInput!
    cityCountry: CityCountryInput
    fullLocation: Json
    active: Boolean
}

input CoordinatesInput{
    lat: String
    lng: String
}

input CityCountryInput{
    city: String
    locality: String
    administrative_area_level_1: String
    country: String
}

type Mutation {
    place(places: PlacesInput): Places
    deletePlace(_id: String!): Places
}
